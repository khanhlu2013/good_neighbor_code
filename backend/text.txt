Share story
    /*
      1. i see that there are 2 posts from friend, i borrow one, undo and borrow again
      2. stranger see that i am requesting, so she request too
      3. friend login:
        . (notification show request)
        . approve stranger
        . undo stranger
        . approve me
        . (notification doesn't show request and table doesn't cause tention)

      4. stranger see that i am borrowing it, color shoud change
      5. i see that i am borrowing and return it.
      6. stranger can see it is available again
      7. friend can see available color again to decide: deny it
      8. stranger just dont see that item anymore
      . friend undo deny
      . stranger see it is requesting again
    */


. LOW PRIORITY INVENTORY
. ----------------------
  . upgrade api to support multiple spa web app
  . upgrade api to support mobile app. (fow now api only work with browser)
    . what is it mean for a mobile app to receive a cookie from a successful login response
  . figure out how to use a post request for sign up and log out. did andrew mead use post?
  . also understand get/post for good
  . search by name with pagination/connection? damn
  . think about the auth flow. If i just logout, i do not need to check if i am login. also i should know locally from cookie that i am not login.
  . firgure out how to make the api agnostic to the front client url. any one can write a SPA app, host it somewhere, login to goodneighboor api and get redirect there. learn about the uri callback. seem like there is multiple. uri.
  . how to replace manual await for Model.init() with a middle ware. what is the best practice for production?
  . can composite key be utilize for a single column? or is it just the first key, and not the second key

. INVENTORY
. ---------
  . if there is no internet, i need to response better.
  . notification page
  . write some test for the home/profile/auth route
  . display list of your friend + remove friend
  . add picture to profile
  . on the front end, i need to somehow extract out all the const, including url and param expected such as addFriend : IdToAdd
  . truely understand mongo, and how to fix the array duplicate issue that a user can't have duplicated friend
  . seem like when the user db is empty, the get profile return error
  . get prettier into code studio
  . change connection into connection-model.js
  . allow inviter to revoke friend after invited-person approved.
  . think about profile -> connection organization to split up code
  . clean up async handler from express and create a error handler middleware
  . rename add to invite
  . friends page:
    how can i use existing feature on searchByEmail and manage this table?
  . how can i test the frontend login page and the back end auth-api route? do i leave this alone?
  . before each for e2e take a long time. invest do a script here
  . provide spinner every where pending for response
  . investigate props type
  . handle frontend error: lets say somehow the session terminated. and a user access API and get 401. i do not want to display a unhandle project rejection.
  . make e2e test more stayble by narrow down the snapshot area
  . allow multiple post image with the main image as the thumbnail
  . eliminate default import for both backend and frontend. test auto import for backend.
  . see if we can eliminate refreshConnectionsCb. if we don't differentiate between create/modify and just have a crudConnection, then we don't need to refresh it inside searchEmail because searchEmail just simply call crud for create and the parent management component will refresh it without needing to pass the cb in the child component
  . should i factor out a lib to get posts, connections ...
  . create error handling for the front end to be more detail: internet or server bug
  . shareLog, create and update failure should be unit tested and not e2e tested.
  . work on deployment. and provide a make-sense mvp for auth. 
  . when i login, i need to make it a post because if it is a get, i will be able to go back into history which is a undesireable behavior
  . fuck: change post into user. shareLog to have from and to; or consider borrower and lender. but from and to do share many time. and well understood from many context. 
  . for share, isReturnByTo can't be true if isApprovedByFrom is undefined or false. i need this validation
 . renaming share.borrower
 . create a model for connection for the frontend
 . color coded available post , and current borrowing post
. how do i know a post have picture or not?
. test when connection change, InPost will be changing. this will be affecting current borrowing. think about mvp
. Using Immutable Data Structures: https://reactjs.org/docs/optimizing-performance.html#the-power-of-not-mutating-data
. https://facebook.github.io/immutable-js/
. post: { ...state.post, isActive }, immutable.js seem can aleviate this boilerplate
. put glyphycon remove in both friend and outFriend request, make col the same
. when connection change, inPost need to refresh (by a key from privateApp)
  . remove react tab, so that i can make the app more perforamnce on lazy loading.  ( i need to find a better library)
  . create notification-dashboard api for dash board notification. this can be delay until i find a better react tab. cause for now, all stuff will load, and will set my dash board for me
. optimization: utilize backend data when crud api, do not refresh the whole data
. split out post into 2 stated component: crud and decide (the management code is too big)
. date sort, for request, borrow, return share: create field for model and create ui feature to default sort and custom sort
. split outpost component into 2 stated componont: crud and decision
. create front end model validation
. notification when request is approved and borrow is return. 

. TODAY
. -----
. the key-values.json file need to be duplicate on the frontend and backend. where the app will read the NODE_ENV and decide what value to use. i can think a step further to build this file automatically from a root folder of backend and frontend. these value only need for dev/test purpose. 
. express-session deprecated undefined resave option; provide resave option
. also notice a possible improvement is that the frontend port (for test/dev) use a hard code 3002. this 3002 number is hardcode twice in the .env from react-app and the backend key-for-test-dev.js. is it possible to factor this out too the root too?
. just accept that test env use backend port 3001 and dev use 3000. then i will see how i can factor this number out into the root folder project
. investigate: when i go to google page and go back, it show incorrect login page instead of login page again
---
demo: show a connection management that undo will cover all senario

---

. personally, here are some of my stuff that i dont use all the time. 
. here might be yours
. so possibly we can share them, get to know each other hobie, build relationship,  and get access to tons of stuff. 
. (social media) imagine if sharing physical stuff is as easy as sharing a facebook post
. well, welcome to good neighbor, a social media app i wrote to let you easily communicate, keep track, and share stuff within your network. 
. we can get to see the journey and story our stuff created among our love one
. thank you and happy sharing

---

With good neighboor, There is a single entry point to access the app using using a google account. On your first time using good neighboor, the app will create an account for you in the background. 

...

Usually, an app provide a few option to sign up and login. But may be, less is more. You don't have to remember if you have sign up or not. or if you signed up with google or facebook or with an email and password. there is no chance for a duplicated account. 

---
. start working on the slow connection user experience

. what is the searching state indicate by
. how can i indicate that i am inviting a friend? should i start to work with single doc? yes i think so

---
. forceRenderTabPanel is right now false and it is unmounting component. 
. is outside notification should have a class too for refreshing connection?
. what is the problem with the whole refresh? can i use this minimal approach?
. a bit of flashing public_app after login before loading the private app

ok, lets see we would set a proptype to not require.  this mean user can put in null or forget it. 

. dont let test slow down with youtube video
. make sure i test the notification
i see that refreshing connection should only be run once. on component did mount. 
  
but before that, when i click on create connection, the call back is call. it is responsible to set the state for my component that i am inviting. when it finish create connection, it will be responsible to clear it out

---
. how do i factor crud dialog out and decision dialog out of outpost to scale
. make sure i redo the test : no more isRefreshing ...
. make sure i test the outer tab/private app/notification
---
lets test outPost, i need to get loading icon into InPost
  . one time loading for outPost: do net set outPosts to null;
  . do not allow null to outpost and conditional render it
  . create/edit outPost dialog need to wait there 

---

lets just talk how the flow is for now , understand it first
  . click button
  . set open flag, and sessionId so that the old dialog will be killed
  . fill out dialog and click ok 
  . onCrudPostCb
    . set open flag false
    . await api
    . do refresh Posts.

---

create a isCrudingFlag and pass it into the dialog. do not close it right away.

---
side track: filter unactive post? currently, user can borrow unactive post and back end throw error.
side track: what happen if i remove 2 connections(or anything) while waiting
side track: test loading icon when enter connection management and inpost / out post


side track : OutPostCrudDialog make post a nullorRequired






