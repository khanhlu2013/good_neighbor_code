. LOW PRIORITY INVENTORY
. ----------------------
  . upgrade api to support multiple spa web app
  . upgrade api to support mobile app. (fow now api only work with browser)
    . what is it mean for a mobile app to receive a cookie from a successful login response
  . figure out how to use a post request for sign up and log out. did andrew mead use post?
  . also understand get/post for good
  . search by name with pagination/connection? damn
  . think about the auth flow. If i just logout, i do not need to check if i am login. also i should know locally from cookie that i am not login.
  . firgure out how to make the api agnostic to the front client url. any one can write a SPA app, host it somewhere, login to goodneighboor api and get redirect there. learn about the uri callback. seem like there is multiple. uri.
  . how to replace manual await for Model.init() with a middle ware. what is the best practice for production?
  . can composite key be utilize for a single column? or is it just the first key, and not the second key

. INVENTORY
. ---------
  . if there is no internet, i need to response better.
  . notification page
  . write some test for the home/profile/auth route
  . display list of your friend + remove friend
  . add picture to profile
  . on the front end, i need to somehow extract out all the const, including url and param expected such as addFriend : IdToAdd
  . truely understand mongo, and how to fix the array duplicate issue that a user can't have duplicated friend
  . seem like when the user db is empty, the get profile return error
  . get prettier into code studio
  . change connection into connection-model.js
  . allow inviter to revoke friend after invited-person approved.
  . think about profile -> connection organization to split up code
  . clean up async handler from express and create a error handler middleware
  . rename add to invite
  . friends page:
    how can i use existing feature on searchByEmail and manage this table?
  . how can i test the frontend login page and the back end auth-api route? do i leave this alone?
  . before each for e2e take a long time. invest do a script here
  . provide spinner every where pending for response
  . investigate props type
  . handle frontend error: lets say somehow the session terminated. and a user access API and get 401. i do not want to display a unhandle project rejection.
  . make e2e test more stayble by narrow down the snapshot area
  . allow multiple post image with the main image as the thumbnail
  . eliminate default import for both backend and frontend. test auto import for backend.

. TODAY
. -----
  . write some test
  . re-organize the whole project as one git repo. including the front and back

-----
. the key-values.json file need to be duplicate on the frontend and backend. where the app will read the NODE_ENV and decide what value to use. i can think a step further to build this file automatically from a root folder of backend and frontend. these value only need for dev/test purpose. 
. express-session deprecated undefined resave option; provide resave option


---
. also notice a possible improvement is that the frontend port (for test/dev) use a hard code 3002. this 3002 number is hardcode twice in the .env from react-app and the backend key-for-test-dev.js. is it possible to factor this out too the root too?
. just accept that test env use backend port 3001 and dev use 3000. then i will see how i can factor this number out into the root folder project

---
ok, lets skip the testing for ConnectionTable
---

ok, lets move on a bit. what is the next task ? yay. post management. it is a post database. who post what. what is the db look like? user, what is the product look like? title, description, picture. with picture i have 3 options: no picture for now, 1 picture, and a front picture + more picture. pick 1,2,3. because if i put 1 picture, i will have to update later. 

---

before doing post, i really want to fully test the connectionmanagement table. 